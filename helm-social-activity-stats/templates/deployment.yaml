apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kor-base.fullname" . }}
  labels:
    {{- include "kor-base.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kor-base.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kor-base.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kor-base.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        {{- if .Values.elasticsearch.proxy.enabled }}
        - name: es-proxy
          image: abutaha/aws-es-proxy:v1.0
          command: ["aws-es-proxy", "-endpoint", "{{ .Values.elasticsearch.url }}", "-listen", "127.0.0.1:{{ .Values.elasticsearch.proxy.port }}"]
        {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          {{- with .Values.command }}
          command: {{ toYaml . | nindent 12 }}
          {{- end }}
          env:
          # user defined envs
          {{- range $k, $v := .Values.env }}
            - name: {{ $k }}
              value: "{{ $v }}"
          {{- end }}
          # envs from secret
          {{- range $k, $v := .Values.secret.values }}
            - name: {{ $k }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.secret.name }}
                  key: {{ $v }}
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- range $k, $v := .Values.mountSecrets }}
            - name: {{ $k }}
              mountPath: {{ $v }}
              readOnly: true
          {{- end }}
          {{- range $k, $v := .Values.mountConfigmaps }}
            - name: {{ $k }}
              mountPath: {{ $v }}
              readOnly: true
          {{- end }}
      volumes:
      {{- range $k, $v := .Values.mountSecrets }}
        - name: {{ $k }}
          secret:
            secretName: {{ $k }}
      {{- end }}
      {{- range $k, $v := .Values.mountConfigmaps }}
        - name: {{ $k }}
          configMap:
            name: {{ $k }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
